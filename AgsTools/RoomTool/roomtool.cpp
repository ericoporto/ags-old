#include "util/filestream.h"
#include "util/file.h"
#include "roomlib.h"
#include <fstream>
#include <string>
#include "cxxopts.hpp"


void parse(int argc, char* argv[])
{
    try
    {
        cxxopts::Options options(argv[0], " - A command line tool to manipulate rooms.");
        options
                .positional_help("<input>")
                .show_positional_help();

        options.add_options()
                ("i,input", "AGS Script Object generated by a compiler.", cxxopts::value<std::string>())
                ("r,room", "Room path", cxxopts::value<std::string>())
                ("h,help", "Print usage")
                ;

        options.parse_positional({"input", "room"});

        auto result = options.parse(argc, argv);
        std::vector<std::string> _headers;
        std::string _input;
        std::string _room;

        if (result.count("help"))
        {
            std::cout << options.help() << std::endl;
            exit(0);
        }

        if (result.count("input"))
        {
            _input = result["input"].as<std::string>();
            std::cout << "Input = " << _input << std::endl;
        }
        else
        {
            std::cout << "No preprocessed .asc Script file passed as input." << std::endl;
            exit(1);
        }

        if (result.count("room"))
        {
            _room = result["room"].as<std::string>();
            std::cout << "room = " << _room << std::endl;
        }
        else
        {
            std::cout << "No room passed to be modified." << std::endl;
            exit(1);
        }

        ModifyRoomScript(_room.c_str(),_input.c_str());

        std::cout << "Room succesfully modified in place." << std::endl;
        exit(0);
    }
    catch (const cxxopts::OptionException& e)
    {
        std::cout << "error parsing options: " << e.what() << std::endl;
        exit(1);
    }
}

int main(int argc, char* argv[])
{
    parse(argc, argv);

    return 0;
}